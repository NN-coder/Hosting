{"version":3,"sources":["components/mainContentSections/MainContentSectionPromo/StyledPromo.tsx","components/mainContentSections/MainContentSectionPromo/MainContentSectionPromo.tsx","components/StyledFormItem.tsx","components/mainContentSections/Support/SupportCenter/SupportCenter.tsx","components/mainContentSections/Support/Support.tsx"],"names":["RowOne","styled","div","RowTwo","PromoText","h2","StyledPromo","className","rowOne","rowTwo","bgPosition","style","backgroundPosition","backgrounds","getPromoBackground","name","res","getSingleImage","MainContentSectionPromo","sectionName","titleRowOne","titleRowTwo","useMemo","hiddenLabelStyles","css","requiredLabelStyles","InputLabel","label","isHidden","isRequired","FormInput","FormItem","inputAs","type","placeholder","useState","isLabelHidden","toggleLabel","handleFocusChange","useCallback","event","target","value","length","labelStatus","inputValue","changeValue","handleChange","formInputProps","required","onChange","onFocus","onBlur","inputRef","useRef","as","ref","onClick","current","focus","defaultProps","StyledFormItem","SearchForm","form","attrs","action","method","SearchFormInput","SearchFormSubmit","StandardBtn","SupportCenterWrapper","StyledWrapper","SupportCenter","StyledStandardSectionTitle","maxDeviceWidth","minDeviceWidth","Support"],"mappings":"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","file":"static/js/10.49fa99a3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst RowOne = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n  letter-spacing: 0.025em;\n`;\nconst RowTwo = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n`;\nconst PromoText = styled.h2`\n  position: absolute;\n  top: 50%;\n  left: calc((100% - 1200px) / 2);\n  color: white;\n  white-space: nowrap;\n  text-transform: uppercase;\n  transform: translateY(-50%);\n\n  @media (max-width: 1250px) {\n    left: calc((100% - 1160px) / 2);\n  }\n  @media (max-width: 1200px) {\n    left: 20px;\n  }\n  @media (max-width: 1000px) {\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n  @media (max-width: 600px) {\n    ${RowOne} {\n      font-size: 3.5rem;\n    }\n    ${RowTwo} {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport interface Props {\n  rowOne: string;\n  rowTwo: string;\n  bgPosition: string;\n  className?: string;\n}\n\nconst Promo: React.FC<Props> = ({ className, rowOne, rowTwo, bgPosition }) => (\n  <div className={className} style={{ backgroundPosition: bgPosition }}>\n    <PromoText>\n      <RowOne>{rowOne}</RowOne>\n      <RowTwo>{rowTwo}</RowTwo>\n    </PromoText>\n  </div>\n);\n\nexport interface Backgrounds {\n  '540x960': string;\n  '720x1280': string;\n  '1280x720': string;\n  '1600x900': string;\n  '2048x1152': string;\n}\n\nconst StyledPromo = styled(Promo)<{ backgrounds: Backgrounds }>`\n  position: relative;\n  height: 260px;\n  background-repeat: no-repeat;\n\n  @media (min-width: 1600.1px) {\n    background-image: url(${({ backgrounds }) => backgrounds['2048x1152']});\n  }\n  @media (min-width: 1250.1px) and (max-width: 1600px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1600x900']});\n  }\n  @media (min-width: 700.1px) and (max-width: 1250px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1280x720']});\n  }\n  @media (min-width: 500.1px) and (max-width: 700px) {\n    background-image: url(${({ backgrounds }) => backgrounds['720x1280']});\n  }\n  @media (max-width: 500px) {\n    background-image: url(${({ backgrounds }) => backgrounds['540x960']});\n  }\n`;\n\nexport { StyledPromo };\n","import React, { useMemo } from 'react';\n\nimport { StyledPromo, Backgrounds } from './StyledPromo';\nimport { getSingleImage } from '../../img';\n\nconst getPromoBackground = (name: string, res: string) => {\n  return getSingleImage(`mainContentSectionPromo/${name}_${res}`, 'jpg');\n};\n\nexport interface Props {\n  sectionName: string;\n  titleRowOne: string;\n  titleRowTwo: string;\n  bgPosition: string;\n}\n\nconst MainContentSectionPromo: React.FC<Props> = ({\n  sectionName,\n  titleRowOne,\n  titleRowTwo,\n  bgPosition,\n}) => {\n  const backgrounds: Backgrounds = useMemo(\n    () => ({\n      '540x960': getPromoBackground(sectionName, '540x960'),\n      '720x1280': getPromoBackground(sectionName, '720x1280'),\n      '1280x720': getPromoBackground(sectionName, '1280x720'),\n      '1600x900': getPromoBackground(sectionName, '1600x900'),\n      '2048x1152': getPromoBackground(sectionName, '2048x1152'),\n    }),\n    [sectionName]\n  );\n\n  return (\n    <StyledPromo\n      rowOne={titleRowOne}\n      rowTwo={titleRowTwo}\n      bgPosition={bgPosition}\n      backgrounds={backgrounds}\n    />\n  );\n};\n\nexport { MainContentSectionPromo };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo, useRef, MutableRefObject } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst hiddenLabelStyles = css`\n  visibility: hidden;\n  opacity: 0;\n`;\nconst requiredLabelStyles = css`\n  &:after {\n    color: var(--accent-color);\n    font-size: 1.6rem;\n    content: '*';\n  }\n`;\n\nconst InputLabel = styled.label<{ isHidden?: boolean; isRequired?: boolean }>`\n  position: absolute;\n  top: 21px;\n  left: 20px;\n  cursor: text;\n  transition: all 0.2s ease;\n  ${({ isHidden }) => (isHidden ? hiddenLabelStyles : '')}\n  ${({ isRequired }) => (isRequired ? requiredLabelStyles : '')}\n`;\nconst FormInput = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: solid 1px #d3e5eb;\n  resize: none;\n`;\n\ntype InputOrTextarea = HTMLInputElement | HTMLTextAreaElement;\n\nexport interface Props {\n  inputAs: 'input' | 'textarea';\n  name: string;\n  placeholder: string;\n  isRequired?: boolean;\n  type?: string;\n  className?: string;\n}\n\nconst FormItem: React.FC<Props> = ({ className, inputAs, type, name, placeholder, isRequired }) => {\n  const [isLabelHidden, toggleLabel] = useState(false);\n\n  const handleFocusChange = useCallback((event: React.FocusEvent<InputOrTextarea>) => {\n    if (event.target.value.length === 0) {\n      toggleLabel((labelStatus) => !labelStatus);\n    }\n  }, []);\n\n  const [inputValue, changeValue] = useState('');\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<InputOrTextarea>) => changeValue(event.target.value),\n    []\n  );\n\n  const formInputProps = useMemo(\n    () => ({\n      name,\n      required: isRequired,\n      onChange: handleChange,\n      onFocus: handleFocusChange,\n      onBlur: handleFocusChange,\n    }),\n    [name, isRequired, handleChange, handleFocusChange]\n  );\n\n  const inputRef = useRef<InputOrTextarea>();\n\n  return (\n    <div className={className}>\n      {inputAs === 'input' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLInputElement>}\n          type={type}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      {inputAs === 'textarea' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLTextAreaElement>}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      <InputLabel\n        isHidden={isLabelHidden}\n        isRequired={isRequired}\n        onClick={() => inputRef.current?.focus()}\n      >\n        {placeholder}\n      </InputLabel>\n    </div>\n  );\n};\n\nFormItem.defaultProps = {\n  isRequired: false,\n};\n\nconst StyledFormItem = styled(FormItem)`\n  position: relative;\n  color: var(--text-color);\n  font-size: 1.4rem;\n  letter-spacing: 0.01em;\n`;\n\nexport { StyledFormItem, FormInput, InputLabel };\n","import React from 'react';\nimport styled from 'styled-components';\nimport MediaQuery from 'react-responsive';\n\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StyledFormItem, FormInput, InputLabel } from '../../../StyledFormItem';\nimport { StandardBtn } from '../../../StandardBtn';\nimport { getSingleImage } from '../../../img';\n\nconst SearchForm = styled.form.attrs({\n  action: '',\n  method: 'get',\n  name: 'support-center-search-form',\n})`\n  display: flex;\n  width: 100%;\n`;\n\nconst SearchFormInput = styled(StyledFormItem).attrs({\n  inputAs: 'input',\n  type: 'search',\n  name: 'search',\n})`\n  width: 100%;\n  min-height: 60px;\n  &:before {\n    position: absolute;\n    top: 50%;\n    left: 20px;\n    transform: translateY(-50%);\n    content: url(${getSingleImage('support/icon', 'svg')});\n  }\n  ${FormInput} {\n    padding: 0 50px;\n  }\n  ${InputLabel} {\n    left: 50px;\n  }\n`;\nconst SearchFormSubmit = styled(StandardBtn).attrs({\n  type: 'button',\n})`\n  width: 160px;\n  height: 60px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n`;\n\nconst SupportCenterWrapper = styled(StyledWrapper)`\n  display: flex;\n  flex-direction: column;\n  padding: 80px 0 70px;\n  row-gap: 30px;\n\n  @media (max-width: 1250px) {\n    padding: 80px 20px 70px;\n  }\n  @media (max-width: 800px) {\n    align-items: center;\n  }\n  @media (max-width: 600px) {\n    ${SearchForm} {\n      flex-direction: column;\n      align-items: center;\n      row-gap: 30px;\n    }\n  }\n`;\n\nconst SupportCenter: React.FC = () => (\n  <section>\n    <SupportCenterWrapper>\n      <StyledStandardSectionTitle rowOne=\"Support\" rowTwo=\"Center\" />\n      <SearchForm>\n        <MediaQuery maxDeviceWidth={600}>\n          <SearchFormInput placeholder=\"Enter search item here\" />\n        </MediaQuery>\n        <MediaQuery minDeviceWidth={600.1}>\n          <SearchFormInput placeholder=\"Have a questions? Enter search item here\" />\n        </MediaQuery>\n        <SearchFormSubmit>Search</SearchFormSubmit>\n      </SearchForm>\n    </SupportCenterWrapper>\n  </section>\n);\n\nexport { SupportCenter };\n","import React from 'react';\n\nimport { MainContentSectionPromo } from '../MainContentSectionPromo/MainContentSectionPromo';\nimport { SupportCenter } from './SupportCenter/SupportCenter';\n\nconst Support: React.FC = () => (\n  <section>\n    <MainContentSectionPromo\n      sectionName=\"support\"\n      titleRowOne=\"Support\"\n      titleRowTwo=\"Center\"\n      bgPosition=\"center 40%\"\n    />\n    <SupportCenter />\n  </section>\n);\n\nexport default Support;\n"],"sourceRoot":""}