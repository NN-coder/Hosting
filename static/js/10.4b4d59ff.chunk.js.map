{"version":3,"sources":["components/mainContentSections/MainContentSectionPromo/StyledPromo.tsx","components/mainContentSections/MainContentSectionPromo/MainContentSectionPromo.tsx","components/StyledFormItem.tsx","components/mainContentSections/Support/SupportCenter/SupportCenter.tsx","components/mainContentSections/Support/Support.tsx"],"names":["RowOne","styled","div","RowTwo","PromoText","h2","StyledPromo","className","rowOne","rowTwo","bg","bgPosition","style","backgroundImage","backgroundPosition","getPromoBackground","name","resolution","getSingleImage","MainContentSectionPromo","sectionName","titleRowOne","titleRowTwo","backgrounds","useMemo","minDeviceWidth","maxDeviceWidth","hiddenLabelStyles","css","requiredLabelStyles","InputLabel","label","isHidden","isRequired","FormInput","StyledFormItem","inputAs","type","placeholder","useState","isLabelHidden","toggleLabel","handleFocusChange","useCallback","event","target","value","length","labelStatus","inputValue","changeValue","handleChange","formInputProps","required","onChange","onFocus","onBlur","inputRef","useRef","as","ref","onClick","current","focus","SearchForm","form","attrs","action","method","SearchFormInput","SearchFormSubmit","StandardBtn","SupportCenterWrapper","StyledWrapper","SupportCenter","StyledStandardSectionTitle","Support"],"mappings":"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","file":"static/js/10.4b4d59ff.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst RowOne = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n  letter-spacing: 0.025em;\n`;\nconst RowTwo = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n`;\nconst PromoText = styled.h2`\n  position: absolute;\n  top: 50%;\n  left: calc((100% - 1200px) / 2);\n  color: white;\n  white-space: nowrap;\n  text-transform: uppercase;\n  transform: translateY(-50%);\n\n  @media (max-width: 1250px) {\n    left: calc((100% - 1160px) / 2);\n  }\n  @media (max-width: 1200px) {\n    left: 20px;\n  }\n  @media (max-width: 1000px) {\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n  @media (max-width: 600px) {\n    ${RowOne} {\n      font-size: 3.5rem;\n    }\n    ${RowTwo} {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport interface Props {\n  rowOne: string;\n  rowTwo: string;\n  bg: string;\n  bgPosition: string;\n  className?: string;\n}\n\nconst Promo: React.FC<Props> = ({ className, rowOne, rowTwo, bg, bgPosition }) => (\n  <div\n    className={className}\n    style={{ backgroundImage: `url(${bg})`, backgroundPosition: bgPosition }}\n  >\n    <PromoText>\n      <RowOne>{rowOne}</RowOne>\n      <RowTwo>{rowTwo}</RowTwo>\n    </PromoText>\n  </div>\n);\n\nconst StyledPromo = styled(Promo)`\n  position: relative;\n  height: 260px;\n  background-repeat: no-repeat;\n`;\n\nexport { StyledPromo };\n","import React, { useMemo } from 'react';\nimport MediaQuery from 'react-responsive';\n\nimport { StyledPromo } from './StyledPromo';\nimport { getSingleImage } from '../../utils/img';\n\nconst getPromoBackground = (name: string, resolution: string) => {\n  return getSingleImage(`mainContentSectionPromo/${name}_${resolution}`, 'jpg');\n};\n\nexport interface Backgrounds {\n  '540x960': string;\n  '720x1280': string;\n  '1280x720': string;\n  '1600x900': string;\n  '2048x1152': string;\n}\n\nexport interface Props {\n  sectionName: string;\n  titleRowOne: string;\n  titleRowTwo: string;\n  bgPosition: string;\n}\n\nconst MainContentSectionPromo: React.FC<Props> = ({\n  sectionName,\n  titleRowOne,\n  titleRowTwo,\n  bgPosition,\n}) => {\n  const backgrounds: Backgrounds = useMemo(\n    () => ({\n      '540x960': getPromoBackground(sectionName, '540x960'),\n      '720x1280': getPromoBackground(sectionName, '720x1280'),\n      '1280x720': getPromoBackground(sectionName, '1280x720'),\n      '1600x900': getPromoBackground(sectionName, '1600x900'),\n      '2048x1152': getPromoBackground(sectionName, '2048x1152'),\n    }),\n    [sectionName]\n  );\n\n  return (\n    <>\n      <MediaQuery minDeviceWidth={1600.1}>\n        <StyledPromo\n          rowOne={titleRowOne}\n          rowTwo={titleRowTwo}\n          bg={backgrounds['2048x1152']}\n          bgPosition={bgPosition}\n        />\n      </MediaQuery>\n      <MediaQuery minDeviceWidth={1250.1} maxDeviceWidth={1600}>\n        <StyledPromo\n          rowOne={titleRowOne}\n          rowTwo={titleRowTwo}\n          bg={backgrounds['1600x900']}\n          bgPosition={bgPosition}\n        />\n      </MediaQuery>\n      <MediaQuery minDeviceWidth={700.1} maxDeviceWidth={1250}>\n        <StyledPromo\n          rowOne={titleRowOne}\n          rowTwo={titleRowTwo}\n          bg={backgrounds['1280x720']}\n          bgPosition={bgPosition}\n        />\n      </MediaQuery>\n      <MediaQuery minDeviceWidth={500.1} maxDeviceWidth={700}>\n        <StyledPromo\n          rowOne={titleRowOne}\n          rowTwo={titleRowTwo}\n          bg={backgrounds['720x1280']}\n          bgPosition={bgPosition}\n        />\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={500}>\n        <StyledPromo\n          rowOne={titleRowOne}\n          rowTwo={titleRowTwo}\n          bg={backgrounds['540x960']}\n          bgPosition={bgPosition}\n        />\n      </MediaQuery>\n    </>\n  );\n};\n\nexport { MainContentSectionPromo };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo, useRef, MutableRefObject } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst hiddenLabelStyles = css`\n  visibility: hidden;\n  opacity: 0;\n`;\nconst requiredLabelStyles = css`\n  &:after {\n    color: var(--accent-color);\n    font-size: 1.6rem;\n    content: '*';\n  }\n`;\n\ninterface InputLabelProps {\n  isHidden?: boolean;\n  isRequired?: boolean;\n}\n\nconst InputLabel = styled.label<InputLabelProps>`\n  position: absolute;\n  top: 21px;\n  left: 20px;\n  cursor: text;\n  transition: 0.2s;\n  ${({ isHidden }) => (isHidden ? hiddenLabelStyles : '')}\n  ${({ isRequired }) => (isRequired ? requiredLabelStyles : '')}\n`;\nconst FormInput = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: solid 1px var(--border-color);\n  resize: none;\n`;\n\ntype InputOrTextarea = HTMLInputElement | HTMLTextAreaElement;\n\nexport interface Props {\n  inputAs: 'input' | 'textarea';\n  name: string;\n  placeholder: string;\n  isRequired?: boolean;\n  type?: string;\n  className?: string;\n}\n\nconst FormItem: React.FC<Props> = ({ className, inputAs, type, name, placeholder, isRequired }) => {\n  const [isLabelHidden, toggleLabel] = useState(false);\n\n  const handleFocusChange = useCallback((event: React.FocusEvent<InputOrTextarea>) => {\n    if (event.target.value.length === 0) {\n      toggleLabel((labelStatus) => !labelStatus);\n    }\n  }, []);\n\n  const [inputValue, changeValue] = useState('');\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<InputOrTextarea>) => changeValue(event.target.value),\n    []\n  );\n\n  const formInputProps = useMemo(\n    () => ({\n      name,\n      required: isRequired,\n      onChange: handleChange,\n      onFocus: handleFocusChange,\n      onBlur: handleFocusChange,\n    }),\n    [name, isRequired, handleChange, handleFocusChange]\n  );\n\n  const inputRef = useRef<InputOrTextarea>();\n\n  return (\n    <div className={className}>\n      {inputAs === 'input' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLInputElement>}\n          type={type}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      {inputAs === 'textarea' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLTextAreaElement>}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      <InputLabel\n        isHidden={isLabelHidden}\n        isRequired={isRequired}\n        onClick={() => inputRef.current?.focus()}\n      >\n        {placeholder}\n      </InputLabel>\n    </div>\n  );\n};\n\nconst StyledFormItem = styled(FormItem)`\n  position: relative;\n  color: var(--text-color);\n  font-size: 1.4rem;\n  letter-spacing: 0.01em;\n`;\n\nexport { StyledFormItem, FormInput, InputLabel };\n","import React from 'react';\nimport styled from 'styled-components';\nimport MediaQuery from 'react-responsive';\n\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StyledFormItem, FormInput, InputLabel } from '../../../StyledFormItem';\nimport { StandardBtn } from '../../../StandardBtn';\nimport { getSingleImage } from '../../../utils/img';\n\nconst SearchForm = styled.form.attrs({\n  action: '',\n  method: 'get',\n  name: 'support-center-search-form',\n})`\n  display: flex;\n  width: 100%;\n`;\n\nconst SearchFormInput = styled(StyledFormItem).attrs({\n  inputAs: 'input',\n  type: 'search',\n  name: 'search',\n})`\n  width: 100%;\n  min-height: 60px;\n  &:before {\n    position: absolute;\n    top: 50%;\n    left: 20px;\n    transform: translateY(-50%);\n    content: url(${getSingleImage('support/icon', 'svg')});\n  }\n  ${FormInput} {\n    padding: 0 50px;\n  }\n  ${InputLabel} {\n    left: 50px;\n  }\n`;\nconst SearchFormSubmit = styled(StandardBtn).attrs({\n  type: 'button',\n})`\n  width: 160px;\n  height: 60px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n`;\n\nconst SupportCenterWrapper = styled(StyledWrapper)`\n  display: flex;\n  flex-direction: column;\n  padding-top: 80px;\n  padding-bottom: 70px;\n  row-gap: 30px;\n\n  @media (max-width: 800px) {\n    align-items: center;\n  }\n  @media (max-width: 600px) {\n    ${SearchForm} {\n      flex-direction: column;\n      align-items: center;\n      row-gap: 30px;\n    }\n  }\n`;\n\nconst SupportCenter: React.FC = () => (\n  <section>\n    <SupportCenterWrapper>\n      <StyledStandardSectionTitle rowOne=\"Support\" rowTwo=\"Center\" />\n      <SearchForm>\n        <MediaQuery maxDeviceWidth={600}>\n          <SearchFormInput placeholder=\"Enter search item here\" />\n        </MediaQuery>\n        <MediaQuery minDeviceWidth={600.1}>\n          <SearchFormInput placeholder=\"Have a questions? Enter search item here\" />\n        </MediaQuery>\n        <SearchFormSubmit>Search</SearchFormSubmit>\n      </SearchForm>\n    </SupportCenterWrapper>\n  </section>\n);\n\nexport { SupportCenter };\n","import React from 'react';\n\nimport { MainContentSectionPromo } from '../MainContentSectionPromo/MainContentSectionPromo';\nimport { SupportCenter } from './SupportCenter/SupportCenter';\n\nconst Support: React.FC = () => (\n  <section>\n    <MainContentSectionPromo\n      sectionName=\"support\"\n      titleRowOne=\"Support\"\n      titleRowTwo=\"Center\"\n      bgPosition=\"center 40%\"\n    />\n    <SupportCenter />\n  </section>\n);\n\nexport default Support;\n"],"sourceRoot":""}