{"version":3,"sources":["components/mainContentSections/MainContentSectionPromo/StyledPromo.tsx","components/mainContentSections/MainContentSectionPromo/MainContentSectionPromo.tsx","components/StyledFormItem.tsx","components/StyledStandardForm.tsx","components/mainContentSections/FAQ/QuestionFaq/questions.ts","components/mainContentSections/FAQ/QuestionFaq/QuestionFaq.tsx","components/mainContentSections/FAQ/SubmitYourQuestion/SubmitYourQuestion.tsx","components/mainContentSections/FAQ/FAQ.tsx"],"names":["RowOne","styled","div","RowTwo","PromoText","h2","StyledPromo","className","rowOne","rowTwo","bgPosition","style","backgroundPosition","backgrounds","getPromoBackground","name","res","getSingleImage","MainContentSectionPromo","sectionName","titleRowOne","titleRowTwo","useMemo","hiddenLabelStyles","css","requiredLabelStyles","InputLabel","label","isHidden","isRequired","FormInput","FormItem","inputAs","type","placeholder","useState","isLabelHidden","toggleLabel","handleFocusChange","useCallback","event","target","value","length","labelStatus","inputValue","changeValue","handleChange","formInputProps","required","onChange","onFocus","onBlur","inputRef","useRef","as","ref","onClick","current","focus","defaultProps","StyledFormItem","StandardFormInput","StandardFormSubjectInput","StandardFormQuestionsInput","StandardFormSubmit","StandardBtn","StyledStandardForm","action","method","handleSubmit","onSubmit","questions","question","answer","id","shortid","generate","QuestionCard","QuestionCardTitle","QuestionCardText","p","AskBtn","QuestionFaqWrapper","StyledWrapper","QuestionFaq","StyledStandardSectionTitle","map","SubmitYourQuestionWrapper","SubmitYourQuestion","preventDefault","alert","FAQ"],"mappings":"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","file":"static/js/7.18b79820.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst RowOne = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n  letter-spacing: 0.025em;\n`;\nconst RowTwo = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n`;\nconst PromoText = styled.h2`\n  position: absolute;\n  top: 50%;\n  left: calc((100% - 1200px) / 2);\n  color: white;\n  white-space: nowrap;\n  text-transform: uppercase;\n  transform: translateY(-50%);\n\n  @media (max-width: 1250px) {\n    left: calc((100% - 1160px) / 2);\n  }\n  @media (max-width: 1200px) {\n    left: 20px;\n  }\n  @media (max-width: 1000px) {\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n  @media (max-width: 600px) {\n    ${RowOne} {\n      font-size: 3.5rem;\n    }\n    ${RowTwo} {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport interface Props {\n  rowOne: string;\n  rowTwo: string;\n  bgPosition: string;\n  className?: string;\n}\n\nconst Promo: React.FC<Props> = ({ className, rowOne, rowTwo, bgPosition }) => (\n  <div className={className} style={{ backgroundPosition: bgPosition }}>\n    <PromoText>\n      <RowOne>{rowOne}</RowOne>\n      <RowTwo>{rowTwo}</RowTwo>\n    </PromoText>\n  </div>\n);\n\nexport interface Backgrounds {\n  '540x960': string;\n  '720x1280': string;\n  '1280x720': string;\n  '1600x900': string;\n  '2048x1152': string;\n}\n\nconst StyledPromo = styled(Promo)<{ backgrounds: Backgrounds }>`\n  position: relative;\n  height: 260px;\n  background-repeat: no-repeat;\n\n  @media (min-width: 1600.1px) {\n    background-image: url(${({ backgrounds }) => backgrounds['2048x1152']});\n  }\n  @media (min-width: 1250.1px) and (max-width: 1600px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1600x900']});\n  }\n  @media (min-width: 700.1px) and (max-width: 1250px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1280x720']});\n  }\n  @media (min-width: 500.1px) and (max-width: 700px) {\n    background-image: url(${({ backgrounds }) => backgrounds['720x1280']});\n  }\n  @media (max-width: 500px) {\n    background-image: url(${({ backgrounds }) => backgrounds['540x960']});\n  }\n`;\n\nexport { StyledPromo };\n","import React, { useMemo } from 'react';\n\nimport { StyledPromo, Backgrounds } from './StyledPromo';\nimport { getSingleImage } from '../../img';\n\nconst getPromoBackground = (name: string, res: string) => {\n  return getSingleImage(`mainContentSectionPromo/${name}_${res}`, 'jpg');\n};\n\nexport interface Props {\n  sectionName: string;\n  titleRowOne: string;\n  titleRowTwo: string;\n  bgPosition: string;\n}\n\nconst MainContentSectionPromo: React.FC<Props> = ({\n  sectionName,\n  titleRowOne,\n  titleRowTwo,\n  bgPosition,\n}) => {\n  const backgrounds: Backgrounds = useMemo(\n    () => ({\n      '540x960': getPromoBackground(sectionName, '540x960'),\n      '720x1280': getPromoBackground(sectionName, '720x1280'),\n      '1280x720': getPromoBackground(sectionName, '1280x720'),\n      '1600x900': getPromoBackground(sectionName, '1600x900'),\n      '2048x1152': getPromoBackground(sectionName, '2048x1152'),\n    }),\n    [sectionName]\n  );\n\n  return (\n    <StyledPromo\n      rowOne={titleRowOne}\n      rowTwo={titleRowTwo}\n      bgPosition={bgPosition}\n      backgrounds={backgrounds}\n    />\n  );\n};\n\nexport { MainContentSectionPromo };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo, useRef, MutableRefObject } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst hiddenLabelStyles = css`\n  visibility: hidden;\n  opacity: 0;\n`;\nconst requiredLabelStyles = css`\n  &:after {\n    color: var(--accent-color);\n    font-size: 1.6rem;\n    content: '*';\n  }\n`;\n\nconst InputLabel = styled.label<{ isHidden?: boolean; isRequired?: boolean }>`\n  position: absolute;\n  top: 21px;\n  left: 20px;\n  cursor: text;\n  transition: all 0.2s ease;\n  ${({ isHidden }) => (isHidden ? hiddenLabelStyles : '')}\n  ${({ isRequired }) => (isRequired ? requiredLabelStyles : '')}\n`;\nconst FormInput = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: solid 1px #d3e5eb;\n  resize: none;\n`;\n\ntype InputOrTextarea = HTMLInputElement | HTMLTextAreaElement;\n\nexport interface Props {\n  inputAs: 'input' | 'textarea';\n  name: string;\n  placeholder: string;\n  isRequired?: boolean;\n  type?: string;\n  className?: string;\n}\n\nconst FormItem: React.FC<Props> = ({ className, inputAs, type, name, placeholder, isRequired }) => {\n  const [isLabelHidden, toggleLabel] = useState(false);\n\n  const handleFocusChange = useCallback((event: React.FocusEvent<InputOrTextarea>) => {\n    if (event.target.value.length === 0) {\n      toggleLabel((labelStatus) => !labelStatus);\n    }\n  }, []);\n\n  const [inputValue, changeValue] = useState('');\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<InputOrTextarea>) => changeValue(event.target.value),\n    []\n  );\n\n  const formInputProps = useMemo(\n    () => ({\n      name,\n      required: isRequired,\n      onChange: handleChange,\n      onFocus: handleFocusChange,\n      onBlur: handleFocusChange,\n    }),\n    [name, isRequired, handleChange, handleFocusChange]\n  );\n\n  const inputRef = useRef<InputOrTextarea>();\n\n  return (\n    <div className={className}>\n      {inputAs === 'input' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLInputElement>}\n          type={type}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      {inputAs === 'textarea' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLTextAreaElement>}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      <InputLabel\n        isHidden={isLabelHidden}\n        isRequired={isRequired}\n        onClick={() => inputRef.current?.focus()}\n      >\n        {placeholder}\n      </InputLabel>\n    </div>\n  );\n};\n\nFormItem.defaultProps = {\n  isRequired: false,\n};\n\nconst StyledFormItem = styled(FormItem)`\n  position: relative;\n  color: var(--text-color);\n  font-size: 1.4rem;\n  letter-spacing: 0.01em;\n`;\n\nexport { StyledFormItem, FormInput, InputLabel };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StandardBtn } from './StandardBtn';\nimport { StyledFormItem } from './StyledFormItem';\n\nconst StandardFormInput = styled(StyledFormItem)`\n  @media (max-width: 800px) {\n    grid-column: 1 / -1;\n  }\n`;\nconst StandardFormSubjectInput = styled(StyledFormItem)`\n  grid-column: 1 / -1;\n`;\nconst StandardFormQuestionsInput = styled(StyledFormItem)`\n  grid-row: span 3;\n  grid-column: 1 / -1;\n`;\n\nconst StandardFormSubmit = styled(StandardBtn)`\n  grid-column: 1 / -1;\n  width: 160px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n\n  @media (max-width: 800px) {\n    justify-self: center;\n  }\n`;\n\nexport interface Props {\n  name: string;\n  action: string;\n  method: string;\n  handleSubmit?: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n}\n\nconst StandardForm: React.FC<Props> = ({ name, action, method, className, handleSubmit }) => (\n  <form name={name} action={action} method={method} onSubmit={handleSubmit} className={className}>\n    <StandardFormInput inputAs=\"input\" type=\"text\" name=\"name\" placeholder=\"Name\" isRequired />\n    <StandardFormInput inputAs=\"input\" type=\"email\" name=\"email\" placeholder=\"Email\" isRequired />\n    <StandardFormSubjectInput\n      inputAs=\"input\"\n      type=\"text\"\n      name=\"subject\"\n      placeholder=\"Subject\"\n      isRequired\n    />\n    <StandardFormQuestionsInput\n      inputAs=\"textarea\"\n      name=\"questions\"\n      placeholder=\"Ask your questions here\"\n      isRequired\n    />\n    <StandardFormSubmit type=\"submit\">Submit</StandardFormSubmit>\n  </form>\n);\n\nconst StyledStandardForm = styled(StandardForm)`\n  display: grid;\n  grid-auto-rows: 60px;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  margin-top: 35px;\n  column-gap: 30px;\n  row-gap: 10px;\n`;\n\nexport { StyledStandardForm };\n","import shortid from 'shortid';\n\nconst questions = [\n  {\n    question: 'Lorem Ipsum is simply dummy text of the print?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book. It has survived not only five centuries. but also the leap into electronic typesetting, remaining essentially unchanged.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Opposed to using content here, content here?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'There are many variations of passages of Lorem?',\n    answer: `Embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Making this the first true generator on the?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Standard chunk of Lorem Ipsum used since?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book. It has survived not only five centuries. but also the leap into electronic typesetting, remaining essentially unchanged.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Why are uou gay?',\n    answer: `- Who says i'm gay? - You are gay. You are transgender, and you're a gay rights activist, and an outspoken... Lesbian? Homosexual? How can I describe you? - I am Pepe Julian Onziema, an LGBTI activist. - What's that? - I'm a human rights defender. - Now we're looking at the raging debate. You're a gay rights activist: why should someone be gay?`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Lorem Ipsum is simply dummy text of the print?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book. It has survived not only five centuries. but also the leap into electronic typesetting, remaining essentially unchanged.`,\n    id: shortid.generate(),\n  },\n  {\n    question: 'Opposed to using content here, content here?',\n    answer: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the when an unknown printer took a galley of type and scrambled it to make. a type specimen book.`,\n    id: shortid.generate(),\n  },\n];\n\nexport { questions };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StandardBtn } from '../../../StandardBtn';\nimport { questions } from './questions';\n\nconst QuestionCard = styled.div`\n  display: flex;\n  align-items: start;\n  font-weight: 800;\n  font-size: 1.4rem;\n  column-gap: 30px;\n  &:before {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 65px;\n    height: 65px;\n    color: white;\n    font-size: 3rem;\n    text-transform: uppercase;\n    background-color: var(--accent-color);\n    content: 'q';\n  }\n`;\nconst QuestionCardTitle = styled.div`\n  margin: 25px 0;\n  color: var(--text-color-primary);\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n`;\nconst QuestionCardText = styled.p`\n  max-width: 600px;\n  color: var(--text-color);\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: 0.01em;\n`;\n\nconst AskBtn = styled(StandardBtn)`\n  grid-column: 1 / -1;\n  justify-self: center;\n  width: 100%;\n  max-width: 400px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n`;\n\nconst QuestionFaqWrapper = styled(StyledWrapper)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 50px;\n  padding: 80px 0;\n  border-bottom: 1px solid #d3e5eb;\n\n  @media (max-width: 1250px) {\n    padding: 80px 20px;\n  }\n  @media (max-width: 1000px) {\n    ${QuestionCard} {\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n    }\n  }\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n    justify-items: center;\n  }\n`;\n\nconst QuestionFaq: React.FC = () => (\n  <section>\n    <QuestionFaqWrapper>\n      <StyledStandardSectionTitle rowOne=\"Question\" rowTwo=\"Faq's\" />\n      {questions.map(({ question, answer, id }) => (\n        <QuestionCard key={id}>\n          <div>\n            <QuestionCardTitle>{question}</QuestionCardTitle>\n            <QuestionCardText>{answer}</QuestionCardText>\n          </div>\n        </QuestionCard>\n      ))}\n      <AskBtn>Ask your questions through email</AskBtn>\n    </QuestionFaqWrapper>\n  </section>\n);\n\nexport { QuestionFaq };\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StyledStandardForm } from '../../../StyledStandardForm';\n\nconst SubmitYourQuestionWrapper = styled(StyledWrapper)`\n  padding: 85px 0 110px;\n\n  @media (max-width: 1250px) {\n    padding: 85px 20px 110px;\n  }\n  @media (max-width: 800px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst SubmitYourQuestion: React.FC = () => {\n  const handleSubmit = useCallback((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // TODO: Replace with a modal\n    // eslint-disable-next-line no-alert\n    alert('Understood, accepted, processed');\n  }, []);\n\n  return (\n    <section>\n      <SubmitYourQuestionWrapper>\n        <StyledStandardSectionTitle rowOne=\"Submit your\" rowTwo=\"Question\" />\n        <StyledStandardForm\n          name=\"submit-your-question\"\n          action=\"\"\n          method=\"post\"\n          handleSubmit={handleSubmit}\n        />\n      </SubmitYourQuestionWrapper>\n    </section>\n  );\n};\n\nexport { SubmitYourQuestion };\n","import React from 'react';\n\nimport { MainContentSectionPromo } from '../MainContentSectionPromo/MainContentSectionPromo';\nimport { QuestionFaq } from './QuestionFaq/QuestionFaq';\nimport { SubmitYourQuestion } from './SubmitYourQuestion/SubmitYourQuestion';\n\nconst FAQ: React.FC = () => (\n  <section>\n    <MainContentSectionPromo\n      sectionName=\"faq\"\n      titleRowOne=\"FAQ\"\n      titleRowTwo=\"Questions\"\n      bgPosition=\"center 80%\"\n    />\n    <QuestionFaq />\n    <SubmitYourQuestion />\n  </section>\n);\n\nexport default FAQ;\n"],"sourceRoot":""}