{"version":3,"sources":["components/mainContentSections/MainContentSectionPromo/StyledPromo.tsx","components/mainContentSections/MainContentSectionPromo/MainContentSectionPromo.tsx","components/StyledFormItem.tsx","components/Icon.tsx","components/StyledStandardForm.tsx","components/useFetchedData.tsx","components/mainContentSections/FAQ/QuestionFaq.tsx","components/mainContentSections/FAQ/SubmitYourQuestion.tsx","components/mainContentSections/FAQ/FAQ.tsx"],"names":["RowOne","styled","div","RowTwo","PromoText","h2","StyledPromo","className","rowOne","rowTwo","bgPosition","style","backgroundPosition","backgrounds","getPromoBackground","name","res","getSingleImage","MainContentSectionPromo","sectionName","titleRowOne","titleRowTwo","useMemo","hiddenLabelStyles","css","requiredLabelStyles","InputLabel","label","isHidden","isRequired","FormInput","FormItem","inputAs","type","placeholder","useState","isLabelHidden","toggleLabel","handleFocusChange","useCallback","event","target","value","length","labelStatus","inputValue","changeValue","handleChange","formInputProps","required","onChange","onFocus","onBlur","inputRef","useRef","as","ref","onClick","current","focus","defaultProps","StyledFormItem","Icon","children","viewBox","useContext","IconContext","size","color","attr","stroke","fill","strokeWidth","height","width","aria-hidden","xmlns","StandardFormInput","StandardFormSubjectInput","StandardFormQuestionsInput","StandardFormSubmit","StandardBtn","StyledStandardForm","action","method","handleSubmit","onSubmit","FetchError","message","Error","Wrapper","LoadingIcon","attrs","QuestionCard","QuestionCardTitle","QuestionCardText","p","AskBtn","QuestionFaqWrapper","StyledWrapper","QuestionFaq","data","url","status","state","setState","controller","AbortController","useEffect","fetch","signal","then","ok","json","statusText","catch","error","abort","useFetchedData","questions","StyledStandardSectionTitle","Provider","d","map","question","answer","id","SubmitYourQuestionWrapper","SubmitYourQuestion","preventDefault","alert","FAQ"],"mappings":"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","file":"static/js/7.7909ffde.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst RowOne = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n  letter-spacing: 0.025em;\n`;\nconst RowTwo = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n`;\nconst PromoText = styled.h2`\n  position: absolute;\n  top: 50%;\n  left: calc((100% - 1200px) / 2);\n  color: white;\n  white-space: nowrap;\n  text-transform: uppercase;\n  transform: translateY(-50%);\n\n  @media (max-width: 1250px) {\n    left: calc((100% - 1160px) / 2);\n  }\n  @media (max-width: 1200px) {\n    left: 20px;\n  }\n  @media (max-width: 1000px) {\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n  @media (max-width: 600px) {\n    ${RowOne} {\n      font-size: 3.5rem;\n    }\n    ${RowTwo} {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport interface Props {\n  rowOne: string;\n  rowTwo: string;\n  bgPosition: string;\n  className?: string;\n}\n\nconst Promo: React.FC<Props> = ({ className, rowOne, rowTwo, bgPosition }) => (\n  <div className={className} style={{ backgroundPosition: bgPosition }}>\n    <PromoText>\n      <RowOne>{rowOne}</RowOne>\n      <RowTwo>{rowTwo}</RowTwo>\n    </PromoText>\n  </div>\n);\n\nexport interface Backgrounds {\n  '540x960': string;\n  '720x1280': string;\n  '1280x720': string;\n  '1600x900': string;\n  '2048x1152': string;\n}\n\nconst StyledPromo = styled(Promo)<{ backgrounds: Backgrounds }>`\n  position: relative;\n  height: 260px;\n  background-repeat: no-repeat;\n\n  @media (min-width: 1600.1px) {\n    background-image: url(${({ backgrounds }) => backgrounds['2048x1152']});\n  }\n  @media (min-width: 1250.1px) and (max-width: 1600px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1600x900']});\n  }\n  @media (min-width: 700.1px) and (max-width: 1250px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1280x720']});\n  }\n  @media (min-width: 500.1px) and (max-width: 700px) {\n    background-image: url(${({ backgrounds }) => backgrounds['720x1280']});\n  }\n  @media (max-width: 500px) {\n    background-image: url(${({ backgrounds }) => backgrounds['540x960']});\n  }\n`;\n\nexport { StyledPromo };\n","import React, { useMemo } from 'react';\n\nimport { StyledPromo, Backgrounds } from './StyledPromo';\nimport { getSingleImage } from '../../img';\n\nconst getPromoBackground = (name: string, res: string) => {\n  return getSingleImage(`mainContentSectionPromo/${name}_${res}`, 'jpg');\n};\n\nexport interface Props {\n  sectionName: string;\n  titleRowOne: string;\n  titleRowTwo: string;\n  bgPosition: string;\n}\n\nconst MainContentSectionPromo: React.FC<Props> = ({\n  sectionName,\n  titleRowOne,\n  titleRowTwo,\n  bgPosition,\n}) => {\n  const backgrounds: Backgrounds = useMemo(\n    () => ({\n      '540x960': getPromoBackground(sectionName, '540x960'),\n      '720x1280': getPromoBackground(sectionName, '720x1280'),\n      '1280x720': getPromoBackground(sectionName, '1280x720'),\n      '1600x900': getPromoBackground(sectionName, '1600x900'),\n      '2048x1152': getPromoBackground(sectionName, '2048x1152'),\n    }),\n    [sectionName]\n  );\n\n  return (\n    <StyledPromo\n      rowOne={titleRowOne}\n      rowTwo={titleRowTwo}\n      bgPosition={bgPosition}\n      backgrounds={backgrounds}\n    />\n  );\n};\n\nexport { MainContentSectionPromo };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo, useRef, MutableRefObject } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst hiddenLabelStyles = css`\n  visibility: hidden;\n  opacity: 0;\n`;\nconst requiredLabelStyles = css`\n  &:after {\n    color: var(--accent-color);\n    font-size: 1.6rem;\n    content: '*';\n  }\n`;\n\nconst InputLabel = styled.label<{ isHidden?: boolean; isRequired?: boolean }>`\n  position: absolute;\n  top: 21px;\n  left: 20px;\n  cursor: text;\n  transition: all 0.2s ease;\n  ${({ isHidden }) => (isHidden ? hiddenLabelStyles : '')}\n  ${({ isRequired }) => (isRequired ? requiredLabelStyles : '')}\n`;\nconst FormInput = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: solid 1px #d3e5eb;\n  resize: none;\n`;\n\ntype InputOrTextarea = HTMLInputElement | HTMLTextAreaElement;\n\nexport interface Props {\n  inputAs: 'input' | 'textarea';\n  name: string;\n  placeholder: string;\n  isRequired?: boolean;\n  type?: string;\n  className?: string;\n}\n\nconst FormItem: React.FC<Props> = ({ className, inputAs, type, name, placeholder, isRequired }) => {\n  const [isLabelHidden, toggleLabel] = useState(false);\n\n  const handleFocusChange = useCallback((event: React.FocusEvent<InputOrTextarea>) => {\n    if (event.target.value.length === 0) {\n      toggleLabel((labelStatus) => !labelStatus);\n    }\n  }, []);\n\n  const [inputValue, changeValue] = useState('');\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<InputOrTextarea>) => changeValue(event.target.value),\n    []\n  );\n\n  const formInputProps = useMemo(\n    () => ({\n      name,\n      required: isRequired,\n      onChange: handleChange,\n      onFocus: handleFocusChange,\n      onBlur: handleFocusChange,\n    }),\n    [name, isRequired, handleChange, handleFocusChange]\n  );\n\n  const inputRef = useRef<InputOrTextarea>();\n\n  return (\n    <div className={className}>\n      {inputAs === 'input' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLInputElement>}\n          type={type}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      {inputAs === 'textarea' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLTextAreaElement>}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      <InputLabel\n        isHidden={isLabelHidden}\n        isRequired={isRequired}\n        onClick={() => inputRef.current?.focus()}\n      >\n        {placeholder}\n      </InputLabel>\n    </div>\n  );\n};\n\nFormItem.defaultProps = {\n  isRequired: false,\n};\n\nconst StyledFormItem = styled(FormItem)`\n  position: relative;\n  color: var(--text-color);\n  font-size: 1.4rem;\n  letter-spacing: 0.01em;\n`;\n\nexport { StyledFormItem, FormInput, InputLabel };\n","import React, { useContext } from 'react';\nimport { IconContext } from 'react-icons';\n\nexport interface Props {\n  children: React.ReactNode;\n  viewBox: string;\n  className?: string;\n}\n\nconst Icon: React.FC<Props> = ({ children, viewBox, className }) => {\n  const { size = '1em', color = 'inherit', attr, style } = useContext(IconContext);\n\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox={viewBox}\n      height={size}\n      width={size}\n      color={color}\n      style={style}\n      aria-hidden={!!attr?.['aria-hidden']}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {children}\n    </svg>\n  );\n};\n\nexport { Icon };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StandardBtn } from './StandardBtn';\nimport { StyledFormItem } from './StyledFormItem';\n\nconst StandardFormInput = styled(StyledFormItem)`\n  @media (max-width: 800px) {\n    grid-column: 1 / -1;\n  }\n`;\nconst StandardFormSubjectInput = styled(StyledFormItem)`\n  grid-column: 1 / -1;\n`;\nconst StandardFormQuestionsInput = styled(StyledFormItem)`\n  grid-row: span 3;\n  grid-column: 1 / -1;\n`;\n\nconst StandardFormSubmit = styled(StandardBtn)`\n  grid-column: 1 / -1;\n  width: 160px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n\n  @media (max-width: 800px) {\n    justify-self: center;\n  }\n`;\n\nexport interface Props {\n  name: string;\n  action: string;\n  method: string;\n  handleSubmit?: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n}\n\nconst StandardForm: React.FC<Props> = ({ name, action, method, className, handleSubmit }) => (\n  <form name={name} action={action} method={method} onSubmit={handleSubmit} className={className}>\n    <StandardFormInput inputAs=\"input\" type=\"text\" name=\"name\" placeholder=\"Name\" isRequired />\n    <StandardFormInput inputAs=\"input\" type=\"email\" name=\"email\" placeholder=\"Email\" isRequired />\n    <StandardFormSubjectInput\n      inputAs=\"input\"\n      type=\"text\"\n      name=\"subject\"\n      placeholder=\"Subject\"\n      isRequired\n    />\n    <StandardFormQuestionsInput\n      inputAs=\"textarea\"\n      name=\"questions\"\n      placeholder=\"Ask your questions here\"\n      isRequired\n    />\n    <StandardFormSubmit type=\"submit\">Submit</StandardFormSubmit>\n  </form>\n);\n\nconst StyledStandardForm = styled(StandardForm)`\n  display: grid;\n  grid-auto-rows: 60px;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  margin-top: 35px;\n  column-gap: 30px;\n  row-gap: 10px;\n`;\n\nexport { StyledStandardForm };\n","import React, { useState, useMemo, useEffect, Dispatch, SetStateAction, ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { IconContext } from 'react-icons';\nimport { MdErrorOutline } from 'react-icons/md';\n\nimport { Icon } from './Icon';\n\nclass FetchError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'FetchError';\n  }\n}\n\ntype Loading = { status: 'loading'; value: null };\ntype Error = { status: 'error'; value: FetchError };\ntype Success<T> = { status: 'success'; value: T };\n\ntype Data<T> = Loading | Error | Success<T>;\ntype SetData<T> = Dispatch<SetStateAction<Data<T>>>;\n\nfunction useFetchedData<T>(url: string): [Data<T>, SetData<T>] {\n  const [state, setState] = useState<Data<T>>({ status: 'loading', value: null });\n\n  const controller = useMemo(() => new AbortController(), []);\n\n  useEffect(() => {\n    fetch(url, { signal: controller.signal })\n      .then((res) => {\n        if (res.ok) return res.json();\n        throw new FetchError(res.statusText);\n      })\n      .then((data: T) => setState({ status: 'success', value: data }))\n      .catch((error: FetchError) => setState({ status: 'error', value: error }));\n\n    return () => controller.abort();\n  }, [url, controller]);\n\n  return [state, setState];\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  grid-column: 1 / -1;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 200px;\n  color: black;\n  font-size: 2.5rem;\n  row-gap: 10px;\n`;\n\nconst LoadingIcon = styled(Icon).attrs({\n  viewBox: '0 0 508 508',\n})`\n  animation: 0.8s rotate linear infinite;\n\n  @keyframes rotate {\n    from {\n      transform: rotate(1turn);\n    }\n    to {\n      transform: rotate(0);\n    }\n  }\n`;\n\nfunction handleFailedFetch<T>(data: Data<T>): ReactNode {\n  if (data.status === 'success') return null;\n\n  return (\n    <Wrapper>\n      <IconContext.Provider value={{ size: '60px', color: 'var(--accent-color)' }}>\n        {data.status === 'error' && (\n          <>\n            <MdErrorOutline />\n            Error: {data.value.message}\n          </>\n        )}\n\n        {data.status === 'loading' && (\n          <>\n            <LoadingIcon>\n              <g>\n                <path\n                  d=\"M114.928,174.046l-28.8,28.8C114.48,109.944,212.776,57.617,305.677,85.969c35.405,10.805,66.498,32.506,88.851,62.012\n                  l25.488-19.312C350.79,37.151,220.481,19.078,128.962,88.304c-37.933,28.692-64.873,69.53-76.322,115.694l-30.016-29.952\n                  L0,196.654l68.8,68.8l68.8-68.8L114.928,174.046z\"\n                />\n                <path\n                  d=\"M439.68,242.702l-68.8,68.8l22.624,22.624l29.136-29.12c-28.103,93.051-126.317,145.702-219.368,117.599\n                  c-37.011-11.178-69.311-34.231-91.912-65.599l-25.968,18.688c32.093,44.868,80.787,75.048,135.248,83.824\n                  c11.162,1.812,22.452,2.727,33.76,2.736c95.518-0.045,178.669-65.284,201.44-158.048l29.952,29.92l22.688-22.624L439.68,242.702z\n                  M438.88,288.798l0.816-0.816l1.184,1.2L438.88,288.798z\"\n                />\n              </g>\n            </LoadingIcon>\n            Loading...\n          </>\n        )}\n      </IconContext.Provider>\n    </Wrapper>\n  );\n}\n\nexport { useFetchedData, handleFailedFetch, FetchError };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StyledWrapper } from '../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../StyledStandardSectionTitle';\nimport { StandardBtn } from '../../StandardBtn';\nimport { useFetchedData, handleFailedFetch } from '../../useFetchedData';\n\nconst QuestionCard = styled.div`\n  display: flex;\n  align-items: start;\n  font-weight: 800;\n  font-size: 1.4rem;\n  column-gap: 30px;\n  &:before {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 65px;\n    height: 65px;\n    color: white;\n    font-size: 3rem;\n    text-transform: uppercase;\n    background-color: var(--accent-color);\n    content: 'q';\n  }\n`;\nconst QuestionCardTitle = styled.div`\n  margin: 25px 0;\n  color: var(--text-color-primary);\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n`;\nconst QuestionCardText = styled.p`\n  max-width: 600px;\n  color: var(--text-color);\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: 0.01em;\n`;\n\nconst AskBtn = styled(StandardBtn)`\n  grid-column: 1 / -1;\n  justify-self: center;\n  width: 100%;\n  max-width: 400px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n`;\n\nconst QuestionFaqWrapper = styled(StyledWrapper)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 50px;\n  padding: 80px 0;\n  border-bottom: 1px solid #d3e5eb;\n\n  @media (max-width: 1250px) {\n    padding: 80px 20px;\n  }\n  @media (max-width: 1000px) {\n    ${QuestionCard} {\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n    }\n  }\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n    justify-items: center;\n  }\n`;\n\ninterface Question {\n  question: string;\n  answer: string;\n  id: string;\n}\n\nconst QuestionFaq: React.FC = () => {\n  const [questions] = useFetchedData<Question[]>(\n    'https://api.jsonbin.io/b/5ffda321f98f6e35d5fb9173'\n  );\n\n  return (\n    <section>\n      <QuestionFaqWrapper>\n        <StyledStandardSectionTitle rowOne=\"Question\" rowTwo=\"Faq's\" />\n        {handleFailedFetch<Question[]>(questions)}\n\n        {questions.status === 'success' && (\n          <>\n            {questions.value.map(({ question, answer, id }) => (\n              <QuestionCard key={id}>\n                <div>\n                  <QuestionCardTitle>{question}</QuestionCardTitle>\n                  <QuestionCardText>{answer}</QuestionCardText>\n                </div>\n              </QuestionCard>\n            ))}\n            <AskBtn>Ask your questions through email</AskBtn>\n          </>\n        )}\n      </QuestionFaqWrapper>\n    </section>\n  );\n};\n\nexport { QuestionFaq };\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { StyledWrapper } from '../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../StyledStandardSectionTitle';\nimport { StyledStandardForm } from '../../StyledStandardForm';\n\nconst SubmitYourQuestionWrapper = styled(StyledWrapper)`\n  padding: 85px 0 110px;\n\n  @media (max-width: 1250px) {\n    padding: 85px 20px 110px;\n  }\n  @media (max-width: 800px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst SubmitYourQuestion: React.FC = () => {\n  const handleSubmit = useCallback((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // TODO: Replace with a modal\n    // eslint-disable-next-line no-alert\n    alert('Understood, accepted, processed');\n  }, []);\n\n  return (\n    <section>\n      <SubmitYourQuestionWrapper>\n        <StyledStandardSectionTitle rowOne=\"Submit your\" rowTwo=\"Question\" />\n        <StyledStandardForm\n          name=\"submit-your-question\"\n          action=\"\"\n          method=\"post\"\n          handleSubmit={handleSubmit}\n        />\n      </SubmitYourQuestionWrapper>\n    </section>\n  );\n};\n\nexport { SubmitYourQuestion };\n","import React from 'react';\n\nimport { MainContentSectionPromo } from '../MainContentSectionPromo/MainContentSectionPromo';\nimport { QuestionFaq } from './QuestionFaq';\nimport { SubmitYourQuestion } from './SubmitYourQuestion';\n\nconst FAQ: React.FC = () => (\n  <section>\n    <MainContentSectionPromo\n      sectionName=\"faq\"\n      titleRowOne=\"FAQ\"\n      titleRowTwo=\"Questions\"\n      bgPosition=\"center 80%\"\n    />\n    <QuestionFaq />\n    <SubmitYourQuestion />\n  </section>\n);\n\nexport default FAQ;\n"],"sourceRoot":""}