{"version":3,"sources":["components/mainContentSections/MainContentSectionPromo/StyledPromo.tsx","components/mainContentSections/MainContentSectionPromo/MainContentSectionPromo.tsx","components/StyledFormItem.tsx","components/StyledStandardForm.tsx","components/Masonry.tsx","components/mainContentSections/Testimonials/ClientsTestimonials/StyledComment.tsx","components/mainContentSections/Testimonials/ClientsTestimonials/comments.ts","components/mainContentSections/Testimonials/ClientsTestimonials/ClientsTestimonials.tsx","components/mainContentSections/Testimonials/SubmitYourTestimonial/SubmitYourTestimonial.tsx","components/mainContentSections/Testimonials/Testimonials.tsx"],"names":["RowOne","styled","div","RowTwo","PromoText","h2","StyledPromo","className","rowOne","rowTwo","bgPosition","style","backgroundPosition","backgrounds","getPromoBackground","name","res","getSingleImage","MainContentSectionPromo","sectionName","titleRowOne","titleRowTwo","useMemo","hiddenLabelStyles","css","requiredLabelStyles","InputLabel","label","isHidden","isRequired","FormInput","FormItem","inputAs","type","placeholder","useState","isLabelHidden","toggleLabel","handleFocusChange","useCallback","event","target","value","length","labelStatus","inputValue","changeValue","handleChange","formInputProps","required","onChange","onFocus","onBlur","inputRef","useRef","as","ref","onClick","current","focus","defaultProps","StyledFormItem","StandardFormInput","StandardFormSubjectInput","StandardFormQuestionsInput","StandardFormSubmit","StandardBtn","StyledStandardForm","action","method","handleSubmit","onSubmit","Column","getIndent","gap","getColumns","columnsCount","children","columns","Array","from","React","Children","toArray","forEach","child","index","push","CommentText","p","CommentFooter","CommentAuthorImage","LazyImage","CommentAuthorName","Comment","image","imageWebp","text","alt","StyledComment","getPhotos","jpg","webp","comments","id","shortid","generate","author","comment","images","ClientsTestimonialsWrapper","StyledWrapper","ClientsTestimonialsInner","columnGap","rowGap","columnIndent","rowIndent","display","gridTemplateColumns","columnKeys","map","column","attrs","ShowMoreBtn","renderComment","ClientsTestimonials","matchMedia","window","matches","getInitialColumnsCount","commentsToShow","showComments","StyledStandardSectionTitle","minDeviceWidth","slice","maxDeviceWidth","prevVal","SubmitYourTestimonialWrapper","SubmitYourTestimonial","preventDefault","alert","Testimonials"],"mappings":"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","file":"static/js/8.74318326.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst RowOne = styled.div`\n  font-weight: 800;\n  font-size: 4rem;\n  letter-spacing: 0.025em;\n`;\nconst RowTwo = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n`;\nconst PromoText = styled.h2`\n  position: absolute;\n  top: 50%;\n  left: calc((100% - 1200px) / 2);\n  color: white;\n  white-space: nowrap;\n  text-transform: uppercase;\n  transform: translateY(-50%);\n\n  @media (max-width: 1250px) {\n    left: calc((100% - 1160px) / 2);\n  }\n  @media (max-width: 1200px) {\n    left: 20px;\n  }\n  @media (max-width: 1000px) {\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%);\n  }\n  @media (max-width: 600px) {\n    ${RowOne} {\n      font-size: 3.5rem;\n    }\n    ${RowTwo} {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport interface Props {\n  rowOne: string;\n  rowTwo: string;\n  bgPosition: string;\n  className?: string;\n}\n\nconst Promo: React.FC<Props> = ({ className, rowOne, rowTwo, bgPosition }) => (\n  <div className={className} style={{ backgroundPosition: bgPosition }}>\n    <PromoText>\n      <RowOne>{rowOne}</RowOne>\n      <RowTwo>{rowTwo}</RowTwo>\n    </PromoText>\n  </div>\n);\n\nexport interface Backgrounds {\n  '540x960': string;\n  '720x1280': string;\n  '1280x720': string;\n  '1600x900': string;\n  '2048x1152': string;\n}\n\nconst StyledPromo = styled(Promo)<{ backgrounds: Backgrounds }>`\n  position: relative;\n  height: 260px;\n  background-repeat: no-repeat;\n\n  @media (min-width: 1600.1px) {\n    background-image: url(${({ backgrounds }) => backgrounds['2048x1152']});\n  }\n  @media (min-width: 1250.1px) and (max-width: 1600px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1600x900']});\n  }\n  @media (min-width: 700.1px) and (max-width: 1250px) {\n    background-image: url(${({ backgrounds }) => backgrounds['1280x720']});\n  }\n  @media (min-width: 500.1px) and (max-width: 700px) {\n    background-image: url(${({ backgrounds }) => backgrounds['720x1280']});\n  }\n  @media (max-width: 500px) {\n    background-image: url(${({ backgrounds }) => backgrounds['540x960']});\n  }\n`;\n\nexport { StyledPromo };\n","import React, { useMemo } from 'react';\n\nimport { StyledPromo, Backgrounds } from './StyledPromo';\nimport { getSingleImage } from '../../img';\n\nconst getPromoBackground = (name: string, res: string) => {\n  return getSingleImage(`mainContentSectionPromo/${name}_${res}`, 'jpg');\n};\n\nexport interface Props {\n  sectionName: string;\n  titleRowOne: string;\n  titleRowTwo: string;\n  bgPosition: string;\n}\n\nconst MainContentSectionPromo: React.FC<Props> = ({\n  sectionName,\n  titleRowOne,\n  titleRowTwo,\n  bgPosition,\n}) => {\n  const backgrounds: Backgrounds = useMemo(\n    () => ({\n      '540x960': getPromoBackground(sectionName, '540x960'),\n      '720x1280': getPromoBackground(sectionName, '720x1280'),\n      '1280x720': getPromoBackground(sectionName, '1280x720'),\n      '1600x900': getPromoBackground(sectionName, '1600x900'),\n      '2048x1152': getPromoBackground(sectionName, '2048x1152'),\n    }),\n    [sectionName]\n  );\n\n  return (\n    <StyledPromo\n      rowOne={titleRowOne}\n      rowTwo={titleRowTwo}\n      bgPosition={bgPosition}\n      backgrounds={backgrounds}\n    />\n  );\n};\n\nexport { MainContentSectionPromo };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo, useRef, MutableRefObject } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst hiddenLabelStyles = css`\n  visibility: hidden;\n  opacity: 0;\n`;\nconst requiredLabelStyles = css`\n  &:after {\n    color: var(--accent-color);\n    font-size: 1.6rem;\n    content: '*';\n  }\n`;\n\nconst InputLabel = styled.label<{ isHidden?: boolean; isRequired?: boolean }>`\n  position: absolute;\n  top: 21px;\n  left: 20px;\n  cursor: text;\n  transition: all 0.2s ease;\n  ${({ isHidden }) => (isHidden ? hiddenLabelStyles : '')}\n  ${({ isRequired }) => (isRequired ? requiredLabelStyles : '')}\n`;\nconst FormInput = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  border: solid 1px #d3e5eb;\n  resize: none;\n`;\n\ntype InputOrTextarea = HTMLInputElement | HTMLTextAreaElement;\n\nexport interface Props {\n  inputAs: 'input' | 'textarea';\n  name: string;\n  placeholder: string;\n  isRequired?: boolean;\n  type?: string;\n  className?: string;\n}\n\nconst FormItem: React.FC<Props> = ({ className, inputAs, type, name, placeholder, isRequired }) => {\n  const [isLabelHidden, toggleLabel] = useState(false);\n\n  const handleFocusChange = useCallback((event: React.FocusEvent<InputOrTextarea>) => {\n    if (event.target.value.length === 0) {\n      toggleLabel((labelStatus) => !labelStatus);\n    }\n  }, []);\n\n  const [inputValue, changeValue] = useState('');\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<InputOrTextarea>) => changeValue(event.target.value),\n    []\n  );\n\n  const formInputProps = useMemo(\n    () => ({\n      name,\n      required: isRequired,\n      onChange: handleChange,\n      onFocus: handleFocusChange,\n      onBlur: handleFocusChange,\n    }),\n    [name, isRequired, handleChange, handleFocusChange]\n  );\n\n  const inputRef = useRef<InputOrTextarea>();\n\n  return (\n    <div className={className}>\n      {inputAs === 'input' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLInputElement>}\n          type={type}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      {inputAs === 'textarea' && (\n        <FormInput\n          as={inputAs}\n          ref={inputRef as MutableRefObject<HTMLTextAreaElement>}\n          value={inputValue}\n          {...formInputProps}\n        />\n      )}\n      <InputLabel\n        isHidden={isLabelHidden}\n        isRequired={isRequired}\n        onClick={() => inputRef.current?.focus()}\n      >\n        {placeholder}\n      </InputLabel>\n    </div>\n  );\n};\n\nFormItem.defaultProps = {\n  isRequired: false,\n};\n\nconst StyledFormItem = styled(FormItem)`\n  position: relative;\n  color: var(--text-color);\n  font-size: 1.4rem;\n  letter-spacing: 0.01em;\n`;\n\nexport { StyledFormItem, FormInput, InputLabel };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { StandardBtn } from './StandardBtn';\nimport { StyledFormItem } from './StyledFormItem';\n\nconst StandardFormInput = styled(StyledFormItem)`\n  @media (max-width: 800px) {\n    grid-column: 1 / -1;\n  }\n`;\nconst StandardFormSubjectInput = styled(StyledFormItem)`\n  grid-column: 1 / -1;\n`;\nconst StandardFormQuestionsInput = styled(StyledFormItem)`\n  grid-row: span 3;\n  grid-column: 1 / -1;\n`;\n\nconst StandardFormSubmit = styled(StandardBtn)`\n  grid-column: 1 / -1;\n  width: 160px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n\n  @media (max-width: 800px) {\n    justify-self: center;\n  }\n`;\n\nexport interface Props {\n  name: string;\n  action: string;\n  method: string;\n  handleSubmit?: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n}\n\nconst StandardForm: React.FC<Props> = ({ name, action, method, className, handleSubmit }) => (\n  <form name={name} action={action} method={method} onSubmit={handleSubmit} className={className}>\n    <StandardFormInput inputAs=\"input\" type=\"text\" name=\"name\" placeholder=\"Name\" isRequired />\n    <StandardFormInput inputAs=\"input\" type=\"email\" name=\"email\" placeholder=\"Email\" isRequired />\n    <StandardFormSubjectInput\n      inputAs=\"input\"\n      type=\"text\"\n      name=\"subject\"\n      placeholder=\"Subject\"\n      isRequired\n    />\n    <StandardFormQuestionsInput\n      inputAs=\"textarea\"\n      name=\"questions\"\n      placeholder=\"Ask your questions here\"\n      isRequired\n    />\n    <StandardFormSubmit type=\"submit\">Submit</StandardFormSubmit>\n  </form>\n);\n\nconst StyledStandardForm = styled(StandardForm)`\n  display: grid;\n  grid-auto-rows: 60px;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  margin-top: 35px;\n  column-gap: 30px;\n  row-gap: 10px;\n`;\n\nexport { StyledStandardForm };\n","import React, { ReactNode, useMemo } from 'react';\nimport shortid from 'shortid';\nimport styled from 'styled-components';\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: inherit;\n`;\n\nconst getIndent = (gap: number | string) => (typeof gap === 'number' ? `${gap}px` : gap);\n\nconst getColumns = (columnsCount: number, children: ReactNode) => {\n  const columns = Array.from({ length: columnsCount }, (): ReactNode[] => []);\n  const childrenArray = React.Children.toArray(children);\n\n  childrenArray.forEach((child, index) => columns[index % columnsCount].push(child));\n\n  return columns;\n};\n\nexport interface Props {\n  children: ReactNode;\n  columnsCount: number;\n  columnGap: number | string;\n  rowGap: number | string;\n  className?: string;\n}\n\nconst Masonry: React.FC<Props> = ({\n  className,\n  children,\n  columnsCount,\n  columnGap = '0',\n  rowGap = '0',\n}) => {\n  const columnIndent = useMemo(() => getIndent(columnGap), [columnGap]);\n  const rowIndent = useMemo(() => getIndent(rowGap), [rowGap]);\n\n  const style = useMemo(\n    (): React.CSSProperties => ({\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columnsCount}, 1fr)`,\n      columnGap: columnIndent,\n      rowGap: rowIndent,\n    }),\n    [columnsCount, columnIndent, rowIndent]\n  );\n\n  const columnKeys = useMemo(() => Array.from({ length: columnsCount }, () => shortid.generate()), [\n    columnsCount,\n  ]);\n\n  return (\n    <div className={className} style={style}>\n      {getColumns(columnsCount, children).map((column, index) => (\n        <Column key={columnKeys[index]}>{column}</Column>\n      ))}\n    </div>\n  );\n};\n\nexport { Masonry };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LazyImage } from '../../../LazyImage';\nimport { getSingleImage } from '../../../img';\n\nconst CommentText = styled.p`\n  color: var(--text-color);\n  line-height: 24px;\n  letter-spacing: 0.01em;\n`;\n\nconst CommentFooter = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 40px;\n  text-transform: uppercase;\n  column-gap: 15px;\n`;\nconst CommentAuthorImage = styled(LazyImage)`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n`;\nconst CommentAuthorName = styled.div`\n  color: var(--text-color-primary);\n  font-weight: 800;\n  letter-spacing: 0.05em;\n  &:before {\n    display: block;\n    font-weight: 400;\n    content: 'By';\n  }\n`;\n\nexport interface Props {\n  image: string;\n  children: string;\n  imageWebp?: string;\n  name?: string;\n  className?: string;\n}\n\nconst Comment: React.FC<Props> = ({ className, name, image, imageWebp, children: text }) => (\n  <div className={className}>\n    <CommentText>{text}</CommentText>\n    <CommentFooter>\n      <CommentAuthorImage image={image} imageWebp={imageWebp} alt={name} />\n      <CommentAuthorName>{name}</CommentAuthorName>\n    </CommentFooter>\n  </div>\n);\n\nComment.defaultProps = {\n  name: 'Anonymous',\n};\n\nconst StyledComment = styled(Comment)`\n  position: relative;\n  padding: 60px 35px;\n  font-size: 1.4rem;\n  border: solid 1px #d3e5eb;\n  &:before {\n    position: absolute;\n    top: -25px;\n    left: 35px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 50px;\n    background-color: white;\n    border: solid 1px #d3e5eb;\n    content: url(${getSingleImage('testimonials/clientsTestimonials/quotes', 'svg')});\n  }\n`;\n\nexport { StyledComment };\n","import shortid from 'shortid';\n\nimport { getSingleImage } from '../../../img';\n\n// const jpgImages = require.context('./img/jpg');\n// const getJpg = (name: string): string => jpgImages(`./${name}.jpg`).default;\n\n// const webpImages = require.context('./img/webp');\n// const getWebp = (name: string): string => webpImages(`./${name}.webp`).default;\n\nconst getPhotos = (name: string) => {\n  return {\n    jpg: getSingleImage(`testimonials/clientsTestimonials/jpg/${name}`, 'jpg'),\n    webp: getSingleImage(`testimonials/clientsTestimonials/webp/${name}`, 'webp'),\n  };\n};\n\nexport interface Comment {\n  author: string;\n  id: string;\n  comment: string;\n  images: {\n    jpg: string;\n    webp: string;\n  };\n}\n\nconst comments: Comment[] = [\n  {\n    id: shortid.generate(),\n    author: 'Playboi Carti',\n    comment:\n      \"In New York I Milly Rock, hide it in my sock, Running from an opp, and I shoot at opp (what), And I'm on the block (what, what, what)\",\n    images: getPhotos('playboi-carti'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Juice Wrld',\n    comment:\n      \"I still see your shadows in my room, Can't take back the love that I gave you, It's to the point where I love and I hate you, And I cannot change you, so I must replace you, oh\",\n    images: getPhotos('juice-wrld'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Lil Baby',\n    comment:\n      \"Drip too hard, don't stand too close, You gon' fuck around and drown off this wave, Doin' all these shows, I've been on the road, I don't care where I go, long as I get paid\",\n    images: getPhotos('lil-baby'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'The weekend',\n    comment:\n      \"Why? 'Cause I'm heartless, And I'm back to my ways 'cause I'm heartless, All this money and this pain got me heartless, Low life for life 'cause I'm heartless. Said I'm heartless, Tryna be a better man, but I'm heartless, Never be a weddin' plan for the heartless, Low life for life 'cause I'm heartless.\",\n    images: getPhotos('the-weekend'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Young Thug',\n    comment:\n      \"Shinin' hard 'cause we back up, Rose gold from your neck up, You know shit gon' get sloppy, tryna check us, Pop an X pill like we Malcolm, yeah, hey\",\n    images: getPhotos('young-thug'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Future',\n    comment:\n      'Percocets, molly, Percocets, Percocets, molly, Percocets, Rep the set, gotta rep the set, Chase a check, never chase a bitch,',\n    images: getPhotos('future'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'DaBaby',\n    comment:\n      \"Oh, you askin' for pictures with niggas? (Huh?), What's your name? Get the fuck out the spot, nigga! (Get the fuck), Tryna figure which deal I'ma take, (Uh-huh), I woke up, couple mil' on my plate, (Let's eat)\",\n    images: getPhotos('dababy'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Saint Jhn',\n    comment:\n      \"Gucci slippers girl you poppin', ya know, The way you look I know you got them niggas flockin', And you got them Rihanna dreads, Now you deserve a nigga with a Kawasaki, ouu\",\n    images: getPhotos('saint-jhn'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Dutchavelli',\n    comment:\n      'Look, pack going up north like Pogba, Kev just stepped out of rehab last week, Still tryna score like Didier Drogba, Dan just looks like Harry Potter',\n    images: getPhotos('dutchavelli'),\n  },\n  {\n    id: shortid.generate(),\n    author: '6lack',\n    comment:\n      \"Love is not looking over shoulders, Love is you should trust what I told you, Lately it's like you been speaking fantasy and I'm speaking reality, 'Cause we got problems we ain’t getting over\",\n    images: getPhotos('6lack'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Anderson .Paak',\n    comment:\n      \"Take chains off, take rings off, Bracelets and things, big aches and pains, My jack rang off with clickbait, Truth is too raw, it's a fish plate\",\n    images: getPhotos('anderson-paak'),\n  },\n  {\n    id: shortid.generate(),\n    author: '21 Savage',\n    comment:\n      \"Every day that I'm alive, I’ma ride with the stick, I'd rather be broke in jail than be dead and rich, Told my brothers take my breath if I turn to a snitch, But I'm 21 4L, ain’t no way I'ma switch\",\n    images: getPhotos('21-savage'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'J. Cole',\n    comment:\n      \"Niggas been countin' me out, I’m countin' my bullets, I'm loadin’ my clips, I'm writin' down names, I'm makin' a list, I'm checkin' it twice and I'm gettin’ ’em hit\",\n    images: getPhotos('j-cole'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Travis Scott',\n    comment:\n      \"I get those goosebumps every time, yeah, you come around, yeah, You ease my mind, you make everything feel fine, Worried 'bout those comments, I'm way too numb, yeah, it's way too dumb, yeah\",\n    images: getPhotos('travis-scott'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Pop Smoke',\n    comment:\n      \"Buddy gon' grrt that, grrt that, brrt that, brrt that, Send shots, make 'em get back, All that chit-chat, chit-chat, riff-raff, riff-raff, My niggas ain't into that\",\n    images: getPhotos('pop-smoke'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Denzel Curry',\n    comment: `I'ma act, one, two, stop the track, Bring it back, what it do?, See, Ricky said, \"Never let nobody get the one up on you, If they run up on you, hit 'em with a one, two or a bitch slap`,\n    images: getPhotos('denzel-curry'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Post Malone',\n    comment:\n      'Me and Kurt feel the same, too much pleasure is pain, My girl spites me in vain, all I do is complain, She needs something to change, need to take off the e-e-edge, So fuck it all tonight',\n    images: getPhotos('post-malone'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Gunna',\n    comment:\n      \"We don't take lightly to niggas who chasin' the clout for a buzz (Nah), These pussies don't talk to my niggas 'cause they know we get the business done (Get the business done), We like some students, white chalkin' you niggas, and trust me, we gonna keep a grudge (Yeah), Swear to God that I'm goin' all out for my family, might pay a visit to your mom (Visit to your mom)\",\n    images: getPhotos('gunna'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Lil Mosey',\n    comment:\n      \"Your ho tweaking, Me and KK Wok, we always geekin' (Always geekin'), Leakin', yeah, my fours leave your body leaking (Boom, boom), I be road runnin' every season (Every season)\",\n    images: getPhotos('lil-mosey'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Polo G',\n    comment:\n      \"Swervin' on the E-way, don't care if I crash in this coupe, Shit I'm thinkin' 'bout too real, might lose my mind in this coupe, Can't relapse off these drugs, man, R.I.P. to Juice, We was tweakin' off them Percs, I popped my last one with you\",\n    images: getPhotos('polo-g'),\n  },\n  {\n    id: shortid.generate(),\n    author: 'Roddy Ricch',\n    comment:\n      \"I just been ballin' out every season, Know it's some niggas I left in the bleachers, I just been married to double cup, I got to pour me a four inside another liter\",\n    images: getPhotos('roddy-ricch'),\n  },\n];\n\nexport { comments };\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport MediaQuery from 'react-responsive';\n\nimport { Masonry } from '../../../Masonry';\nimport { StandardBtn } from '../../../StandardBtn';\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StyledComment } from './StyledComment';\nimport { comments, Comment } from './comments';\n\nconst ClientsTestimonialsWrapper = styled(StyledWrapper)`\n  padding: 80px 0 0;\n\n  @media (max-width: 1250px) {\n    padding: 80px 20px;\n  }\n`;\nconst ClientsTestimonialsInner = styled(Masonry).attrs({\n  columnGap: 30,\n  rowGap: 50,\n})`\n  margin-top: 70px;\n`;\nconst ShowMoreBtn = styled(StandardBtn)`\n  position: relative;\n  left: calc(50% - 85px);\n  width: 170px;\n  margin-top: 40px;\n  font-weight: 700;\n  font-size: 1.4rem;\n  letter-spacing: 0.1em;\n`;\n\nconst getInitialColumnsCount = () => {\n  const { matchMedia } = window;\n  if (matchMedia('(min-width:1000.1px)').matches) return 3;\n  if (matchMedia('(min-width:700.1px)').matches) return 2;\n  return 1;\n};\n\nconst renderComment = ({ author, comment, id, images: { jpg, webp } }: Comment) => (\n  <StyledComment key={id} name={author} image={jpg} imageWebp={webp}>\n    {comment}\n  </StyledComment>\n);\n\n// TODO: Add lazy loading for comments\nconst ClientsTestimonials: React.FC = () => {\n  const [commentsToShow, showComments] = useState(getInitialColumnsCount() * 3);\n\n  return (\n    <section>\n      <ClientsTestimonialsWrapper>\n        <StyledStandardSectionTitle rowOne=\"Clients\" rowTwo=\"Testimonials\" />\n\n        <MediaQuery\n          minDeviceWidth={1000.1}\n          onChange={() => (commentsToShow < 9 ? showComments(9) : null)}\n        >\n          <ClientsTestimonialsInner columnsCount={3}>\n            {comments.slice(0, commentsToShow).map(renderComment)}\n          </ClientsTestimonialsInner>\n        </MediaQuery>\n\n        <MediaQuery\n          minDeviceWidth={700.1}\n          maxDeviceWidth={1000}\n          onChange={() => (commentsToShow < 6 ? showComments(6) : null)}\n        >\n          <ClientsTestimonialsInner columnsCount={2}>\n            {comments.slice(0, commentsToShow).map(renderComment)}\n          </ClientsTestimonialsInner>\n        </MediaQuery>\n\n        <MediaQuery\n          maxDeviceWidth={700}\n          onChange={() => (commentsToShow < 3 ? showComments(3) : null)}\n        >\n          <ClientsTestimonialsInner columnsCount={1}>\n            {comments.slice(0, commentsToShow).map(renderComment)}\n          </ClientsTestimonialsInner>\n        </MediaQuery>\n\n        {commentsToShow < comments.length && (\n          <ShowMoreBtn onClick={() => showComments((prevVal) => prevVal + 3)}>\n            Show more\n          </ShowMoreBtn>\n        )}\n      </ClientsTestimonialsWrapper>\n    </section>\n  );\n};\n\nexport { ClientsTestimonials };\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { StyledWrapper } from '../../../StyledWrapper';\nimport { StyledStandardSectionTitle } from '../../../StyledStandardSectionTitle';\nimport { StyledStandardForm } from '../../../StyledStandardForm';\n\nconst SubmitYourTestimonialWrapper = styled(StyledWrapper)`\n  padding: 100px 0;\n\n  @media (max-width: 1250px) {\n    padding: 100px 20px;\n  }\n`;\n\nconst SubmitYourTestimonial: React.FC = () => {\n  const handleSubmit = useCallback((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // TODO: Replace with a modal\n    // eslint-disable-next-line no-alert\n    alert('Understood, accepted, processed');\n  }, []);\n\n  return (\n    <section>\n      <SubmitYourTestimonialWrapper>\n        <StyledStandardSectionTitle rowOne=\"Submit your\" rowTwo=\"Testimonial\" />\n        <StyledStandardForm\n          name=\"submit-your-testimonial\"\n          action=\"\"\n          method=\"post\"\n          handleSubmit={handleSubmit}\n        />\n      </SubmitYourTestimonialWrapper>\n    </section>\n  );\n};\n\nexport { SubmitYourTestimonial };\n","import React from 'react';\n\nimport { MainContentSectionPromo } from '../MainContentSectionPromo/MainContentSectionPromo';\nimport { ClientsTestimonials } from './ClientsTestimonials/ClientsTestimonials';\nimport { SubmitYourTestimonial } from './SubmitYourTestimonial/SubmitYourTestimonial';\n\nconst Testimonials: React.FC = () => (\n  <section>\n    <MainContentSectionPromo\n      sectionName=\"testimonials\"\n      titleRowOne=\"Testimonials\"\n      titleRowTwo=\"Happy clients\"\n      bgPosition=\"center 70%\"\n    />\n    <ClientsTestimonials />\n    <SubmitYourTestimonial />\n  </section>\n);\n\nexport default Testimonials;\n"],"sourceRoot":""}